buildscript {
	ext.kotlin_version = '1.7.20'
	repositories {
		mavenCentral()
		maven { url 'https://files.minecraftforge.net/maven' }
		maven { url 'https://repo.spongepowered.org/maven' }
		maven { url 'https://jitpack.io' }
	}
	dependencies {
		classpath 'com.github.sdxqw:ForgeGradle:f2c5bb338e'
		classpath 'com.github.sdxqw:MixinGradle:0.6-SNAPSHOT'
		classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
	}
}

apply plugin: 'net.minecraftforge.gradle.tweaker-client'
apply plugin: 'org.jetbrains.kotlin.jvm'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'java'

String tweakerClass = 'me.hobbyshop.basilisk.launch.BasiliskTweaker'
String tweaker = 'basilisk'

compileJava {
	sourceCompatibility = targetCompatibility = 8
}

version '1.8.9'
group 'io.github.axst'

minecraft {
	version = '1.8.9'
	tweakClass = "${tweakerClass}"
	mappings = 'stable_22'
	runDir = 'run'
	clientJvmArgs = ['-Dmixin.debug=true', '-XX:-DisableExplicitGC', '-Xmx1G', '-DFORGE_FORCE_FRAME_RECALC=true']
	makeObfSourceJar = false
}

mixin {
	defaultObfuscationEnv notch
	add sourceSets.main, "mixins.${tweaker}.refmap.json"
}

repositories {
	mavenCentral()
	maven { url 'https://libraries.minecraft.net' }
	maven { url 'https://repo.spongepowered.org/maven' }
	maven { url 'https://jitpack.io' }
}

configurations {
	tclmdk
	implementation.extendsFrom tclmdk
	runtime.extendsFrom tclmdk
	compile {
		canBeResolved = true
	}
}

dependencies {
	tclmdk('org.spongepowered:mixin:0.7.11-SNAPSHOT') {
		exclude module: 'launchwrapper'
		exclude module: 'guava'
		exclude module: 'gson'
		exclude module: 'commons-io'
	}
	implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version")
	annotationProcessor("org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version")

	compileOnly('org.slick2d:slick2d-core:1.0.2')
	implementation("com.andreapivetta.kolor:kolor:1.0.0")

	implementation('org.reflections:reflections:0.10.2')

	implementation('org.luaj:luaj-jse:3.0.1')
}

processResources {
	inputs.files 'src/main/resources'
	outputs.dir 'build/classes/main'
	copy {
		from('src/main/resources')
		into('build/classes/main')
	}
}

jar {
	dependsOn configurations.compile
	from {
		configurations.tclmdk.collect {
			it.isDirectory() ? it : zipTree(it)
		}
	}
	exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA', 'LICENSE.txt', 'dummyThing'
}

jar {
	manifest.attributes(
			'MixinConfigs': "mixins.${tweaker}.json",
			'TweakClass': "${tweakerClass}",
			'TweakOrder': 0,
			'Manifest-Version': 1.0
	)

	from {
		configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
	}

	configurations.tclmdk.each { dep ->
		from(project.zipTree(dep)) {
			exclude 'META-INF', 'META-INF/**'
		}
	}
}
compileKotlin {
	kotlinOptions {
		jvmTarget = "1.8"
	}
}

